<UserControl x:Class="Foutloos.ThemedIconButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Foutloos"
             mc:Ignorable="d" Height="35" Width="84.833">

    <UserControl.Resources>
        <!-- Setting the style for the button-->
        <Style TargetType="Button" x:Key="ButtonDesign">
            <Setter Property="TextBlock.TextAlignment" Value="Center" />
            <Setter Property="TextBlock.Foreground" Value="White" />
            <!-- Setting a template for the button -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="ButtonBorder" CornerRadius="5" Background="DeepSkyBlue" BorderBrush="MidnightBlue" BorderThickness="2">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <!-- Adding a trigger for hovering above the button with the mouse -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <!-- While hovering above the button the background color will change to 'LightBlueSky' -->
                                <Setter Property="Background" TargetName="ButtonBorder" Value="LightSkyBlue" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
        </Style>
    </UserControl.Resources>
    <!-- Placing the actual button with the correct style reference-->
    <Button Style="{StaticResource ButtonDesign}">
        <!-- Creating a viewbox so the content fits well to the buttons size -->
        <Viewbox>
            <!-- Creating a stackpanel in order to fit multiple children in the viewbox -->
            <StackPanel Orientation="Horizontal" Margin="5">
                <!-- Creating the image element that gets the source from user input (see ThemedIconButton.xaml.cs)-->
                <Image Name="IconImageDisplay" Source="{Binding Path=DynamicIcon, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" Width="40" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <!-- Creating the textblock element that gets the text from user input (see ThemedIconButton.xaml.cs)-->
                <TextBlock x:Name="ThemedIconButtonTextBlock" FontWeight="DemiBold" Foreground="White" FontSize="30" FontStretch="Normal" HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Top" TextAlignment="Center" Padding="5" Text="{Binding Path=DynamicTextIcon, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"  />
            </StackPanel>
        </Viewbox>
    </Button>
</UserControl>
